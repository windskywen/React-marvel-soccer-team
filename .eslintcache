[{"/Users/windskywen/Desktop/projects/fonseka/src/index.js":"1","/Users/windskywen/Desktop/projects/fonseka/src/components/App.js":"2","/Users/windskywen/Desktop/projects/fonseka/src/components/Characters.js":"3","/Users/windskywen/Desktop/projects/fonseka/src/components/Team.js":"4","/Users/windskywen/Desktop/projects/fonseka/src/components/CharacterInfo.js":"5","/Users/windskywen/Desktop/projects/fonseka/src/components/Character.js":"6","/Users/windskywen/Desktop/projects/fonseka/src/components/SelectedCharacter.js":"7"},{"size":365,"mtime":1608301085640,"results":"8","hashOfConfig":"9"},{"size":2276,"mtime":1608505094095,"results":"10","hashOfConfig":"9"},{"size":560,"mtime":1608504777421,"results":"11","hashOfConfig":"9"},{"size":7048,"mtime":1608478808787,"results":"12","hashOfConfig":"9"},{"size":1676,"mtime":1608485593913,"results":"13","hashOfConfig":"9"},{"size":1056,"mtime":1608469710588,"results":"14","hashOfConfig":"9"},{"size":655,"mtime":1608384518633,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1yqlguv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/windskywen/Desktop/projects/fonseka/src/index.js",[],["33","34"],"/Users/windskywen/Desktop/projects/fonseka/src/components/App.js",[],"/Users/windskywen/Desktop/projects/fonseka/src/components/Characters.js",["35"],"/Users/windskywen/Desktop/projects/fonseka/src/components/Team.js",["36"],"import React, { useState, useContext, useEffect } from 'react';\nimport { selectContext, photoContext } from 'components/SelectedCharacter';\nimport 'css/team.css';\n\n\nconst Team = (props) => {\n    const photoDefaultPath = 'images/question2.jpg';\n    const [selectedCharacter, ] = useContext(selectContext);\n    const [selectedPhoto,] = useContext(photoContext)\n    const [position, setPosition] = useState('')\n    const [style, setStyle] = useState({\n        position1: 'member',\n        position2: 'member',\n        position3: 'member',\n        position4: 'member',\n        position5: 'member',\n        position6: 'member',\n    })\n    const [team, setTeam] = useState({\n        \"position1\":{\n            title: 'Goalkeeper(GK)',\n            charName: '',\n            photo: photoDefaultPath,\n            status: 'undecided',\n        },\n        \"position2\":{\n            title: 'Striker(ST)',\n            charName: '',\n            photo: photoDefaultPath,\n            status: 'undecided',\n        },\n        \"position3\":{\n            title: 'Midfielder(MD)',\n            charName: '',\n            photo: photoDefaultPath,\n            status: 'undecided'\n        },\n        \"position4\":{\n            title: 'Defender(DF)',\n            charName: '',\n            photo: photoDefaultPath,\n            status: 'undecided'\n        },\n        \"position5\":{\n            title: '',\n            charName: '',\n            photo: photoDefaultPath,\n            status: 'undecided'\n        },\n        \"position6\":{\n            title: '',\n            charName: '',\n            photo: photoDefaultPath,\n            status: 'undecided'\n        },\n    })\n\n    useEffect(() =>{\n        if(props.isConfirm){\n            setTeam(prevState => {\n                return{ ...prevState, \n                    [position]:{\n                        ...prevState,\n                        charName: selectedCharacter.name,\n                        photo: selectedPhoto,\n                        status: 'decided'\n                    }\n                }\n            });\n            props.switchConfirm();\n        }\n    }, [props.isConfirm]);\n\n    const toSelectPosition = (e) => {\n        setPosition(e.currentTarget.id);\n        props.choosePosition(true)\n        styleDefault();\n        changeStyle(e.currentTarget.id);\n    }\n\n    const styleDefault = () => {\n        setStyle(() => {\n            Object.keys(style).forEach((key) => {\n                style[key] = 'member';\n            })\n            return style\n        })\n    }\n\n    const changeStyle = (id) => {\n        setStyle((prevStyle) => {\n            return{\n                ...prevStyle,\n                [id]: \"member-choose\"  \n            }\n        })\n    }\n\n    return (\n        <div className=\"team-wrapper\">\n            <h1>Marvel Soccer Team</h1>\n            <div className=\"member-wrapper\">\n                <div className={style.position1} id=\"position1\" onClick={toSelectPosition}>\n                    <div className=\"member-header\">\n                        <h3>Position:</h3>\n                        <p>Goalkeeper(GK)</p>\n                    </div>\n                    <div className=\"member-photo\">\n                        <img src={team.position1.photo} alt='position1'></img>\n                        <div className=\"member-charName\">\n                            { team.position1.charName ? <h4>{team.position1.charName}</h4> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className={style.position2} id=\"position2\" onClick={toSelectPosition}>\n                    <div className=\"member-header\">\n                        <h3>Position:</h3>\n                        <p>Striker(ST)</p>\n                    </div>\n                    <div className=\"member-photo\">\n                        <img src={team.position2.photo} alt='position2'></img>\n                        <div className=\"member-charName\">\n                            { team.position2.charName ? <h4>{team.position2.charName}</h4> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className={style.position3} id=\"position3\" onClick={toSelectPosition}>\n                    <div className=\"member-header\">\n                        <h3>Position:</h3>\n                        <p>Midfielder(MD)</p>\n                    </div>\n                    <div className=\"member-photo\">\n                        <img src={team.position3.photo} alt='position3'></img>\n                        <div className=\"member-charName\">\n                            { team.position3.charName ? <h4>{team.position3.charName}</h4> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className={style.position4} id=\"position4\" onClick={toSelectPosition}>\n                    <div className=\"member-header\">\n                        <h3>Position:</h3>\n                        <p>Defender(DF)</p>\n                    </div>\n                    <div className=\"member-photo\">\n                        <img src={team.position4.photo} alt='position4'></img>\n                        <div className=\"member-charName\">\n                            { team.position4.charName ? <h4>{team.position4.charName}</h4> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className={style.position5} id=\"position5\" onClick={toSelectPosition}>\n                    <div className=\"member-header\">\n                        <h3>Position:</h3>\n                        <select>\n                            <option>Striker (ST)</option>\n                            <option>Midfielder (MD)</option>\n                            <option>Defender (DF)</option>\n                        </select>\n                    </div>\n                    <div className=\"member-photo\">\n                        <img src={team.position5.photo} alt='position5'></img>\n                        <div className=\"member-charName\">\n                            { team.position5.charName ? <h4>{team.position5.charName}</h4> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className={style.position6} id=\"position6\" onClick={toSelectPosition}>\n                    <div className=\"member-header\">\n                        <h3>Position:</h3>\n                        <select>\n                            <option>Striker (ST)</option>\n                            <option>Midfielder (MD)</option>\n                            <option>Defender (DF)</option>\n                        </select>\n                    </div>\n                    <div className=\"member-photo\">\n                        <img src={team.position6.photo} alt='position6'></img>\n                        <div className=\"member-charName\">\n                            { team.position6.charName ? <h4>{team.position6.charName}</h4> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Team;","/Users/windskywen/Desktop/projects/fonseka/src/components/CharacterInfo.js",[],"/Users/windskywen/Desktop/projects/fonseka/src/components/Character.js",["37"],"import React, {useState, useEffect, useContext} from 'react';\nimport {selectContext, photoContext} from 'components/SelectedCharacter';\n\n\nconst Character = (props) =>{\n\n    const [characterDetail, setCharacterDetail] = useState({})\n    const [photo, setPhoto] = useState('')\n    const [, setSelectedCharacter] = useContext(selectContext);\n    const [, setSelectedPhoto] = useContext(photoContext)\n\n    useEffect(() => {\n        setCharacterDetail(props.characterDetail);\n        setPhoto(`${props.characterDetail.thumbnail.path}/portrait_small.jpg`)\n    },[])\n\n    const handleClick = () => {\n        setSelectedCharacter(characterDetail);\n        const selectedPhotoURL = `${props.characterDetail.thumbnail.path}/portrait_medium.jpg`;\n        setSelectedPhoto(selectedPhotoURL);\n    }\n\n    return(\n        <div className=\"character\" onClick={handleClick}>\n            <img className=\"char-img\" src={photo} alt={characterDetail.name} ></img>\n            <p className=\"char-name\">{characterDetail.name}</p>\n        </div>\n    )\n\n}\n\nexport default Character;","/Users/windskywen/Desktop/projects/fonseka/src/components/SelectedCharacter.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":72,"column":8,"nodeType":"48","endLine":72,"endColumn":25,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":15,"column":7,"nodeType":"48","endLine":15,"endColumn":9,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'is' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'position', 'props', 'selectedCharacter.name', and 'selectedPhoto'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["54"],"React Hook useEffect has a missing dependency: 'props.characterDetail'. Either include it or remove the dependency array. If 'setCharacterDetail' needs the current value of 'props.characterDetail', you can also switch to useReducer instead of useState and read 'props.characterDetail' in the reducer.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [position, props, props.isConfirm, selectedCharacter.name, selectedPhoto]",{"range":"60","text":"61"},"Update the dependencies array to be: [props.characterDetail]",{"range":"62","text":"63"},[2085,2102],"[position, props, props.isConfirm, selectedCharacter.name, selectedPhoto]",[556,558],"[props.characterDetail]"]